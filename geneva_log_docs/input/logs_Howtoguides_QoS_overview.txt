# Logs QoS Dashboard

This document describes various pipeline metrics that are exposed to the customers to visualize and monitor the data movement in Geneva pipeline for their namespaces and account monikers. This will drive the self-troubleshooting by customer in scenarios like missing data, delay in processing data etc. Also, customers can enable alerts on certain metrics to monitor the error conditions and proactively fix the issues.

>[!Note]  
>The dashboard is autogenerated for all customers and discoverable in Jarvis under your [Metrics account] > "GenevaQos" > "<- WarmPathQos".
>If you don't see any data, that means you may not have enabled the Logs QoS metric publishing for your Logs account. Please follow the [Quickstart](./quickstart.md) link to enable the QoS metrics for your Logs.

## Logs QoS metrics breakdown
These metrics will provide a detailed view of the data movement per Namespace or AccountMoniker level.
Below are the core metrics that are exposed:

### I. Pipeline Ingestion QoS metrics & pre-aggregates

__QoS Metrics__
>[!Note]
>__Highlighted__ sampling types are exposed in the Logs Qos Dashboard. The other sampling types can be viewed on demand.
>For more details on metrics aggregation check [Metrics aggregation](../../../metrics/concepts/measurements.md)

| Metric | Sampling Type | Description |
|--------|:-------------:|------------:|
| Pipeline Ingestion | EventReceivedCount | The event count that corresponds to the number of blobs uploaded by MA.|
| Pipeline Ingestion | __EventReceivedBytes__ | The un-compressed byte size of the event data.|
| Pipeline Ingestion | __LatencyMs__ | The wait time in EventHub before ingested by the Logs Pipeline.|
| Pipeline Ingestion | ThroughputMBps | The ingestion throughput in MBps.|

_Use standard Jarvis widget functionality to view the other sampling types._

__Qos metric Pre-aggregates__

>[!Note]
> The Qos dashboard currently preselects __Total__ as the dimension, in all the charts. This means that the displayed metric value represents the average across all the Logs Namespaces and account monikers associated with this Metrics account.
> An account moniker represents a horizontal slice (partition) of the Logs under a particular namespace. A namespace can have multiple monikers, usually one per Azure Region

| Pre-aggregate | Description |
|--------|------------:|
| Total | **Default pre-aggregate.** Metric value under this pre-aggregate displays the selected sampling type across all Logs Namespaces & account monikers.|
| EventNS| **Per Logs Namespace pre-aggregate.** Provides the ability to drill-down and aggregate across specific Logs Namespaces.|
| EventNS+Moniker | **Per Logs Namespace and Account Moniker pre-aggregate**. Provides the ability to drill-down and aggregate across speciffic Logs Namespace & Account Moniker combinations.|

### II. [Geneva Logs to Cosmos](../../../connectors/cosmos/overview.md) connector QoS metrics & pre-aggregates

__QoS Metrics__
>[!Note]
>__Highlighted__ sampling types are exposed in the Logs Qos Dashboard. The other sampling types can be viewed on demand.

| Metric | Sampling Type | Description |
|--------|:-------------:|------------:|
| CosmosUpload | EventReceivedCount | The number of EventHub messages / Blobs received for uploading to Cosmos.|
| CosmosUpload | EventReceivedBytes | The  un-compressed byte size of the event data that is received for uploading to Cosmos.|
| CosmosUpload | EventProcessedCount | The number of EventHub messages / Blobs uploaded to Cosmos.|
| CosmosUpload | __EventProcessedBytes__ | The  un-compressed byte size of the event data that is uploaded to Cosmos.|
| CosmosUpload | __LatencyMs__ | The latency between the time the MA uploaded the data to XStore and Pipeline uploaded to Cosmos.|
| CosmosUpload | __ThroughputMBps__ | The cosmos upload throughput in MBps.|

_Use standard Jarvis widget functionality to view the other sampling types._

## Dashboard charts breakdown
The QoS dashboard contains charts related to both ingestion and [Geneva Logs to Cosmos](../../../connectors/cosmos/overview.md) connector.

* __Warm Path Ingestion Latency (Seconds)__. Represents the ingestion latency (Summary chart type) over period of time. This chart uses *PipelineIngestion > LatencyMs* metric.

* __Cosmos Upload Latency (Seconds)__. Represents the latency (Summary chart type) in uploading the data to Cosmos. This chart uses *CosmosUpload > LatencyMs* metric.

* __Warm Path Ingestion Throughput Trend (MB/s)__. Represents the ingestion throughput in MBps over a period of time. This chart uses *PipelineIngestion > EventReceivedBytes* metric.

* __Warm Path Ingestion Latency Trend (Seconds)__. Represents the ingestion latency over period of time. This chart uses *PipelineIngestion > LatencyMs* metric.

* __Cosmos Upload Throughput (MB/s)__. Represents the cosmos upload throughput in MBps over a period of time. This chart uses *CosmosUpload > ThroughputMBps* metric.

* __Cosmos Upload Latency Trend (Seconds)__. Represents the cosmos upload latency over a period of time. This chart uses *CosmosUpload > LatencyMs** metric.

* __Data Ingested into Geneva Logs (PerDay)__. Represents the total Geneva Logs ingestion throughput per day. This chart uses **PipelineIngestion > EventReceivedBytes* metric.

 * __Data Uploaded to Cosmos (PerDay)__. Represents the total cosmos upload throughput per day. This chart uses *CosmosUpload > EventProcessedBytes* metric.

* __Data Ingested into Geneva Logs (PerDay /PerNamesapce)__. Represents the total pipeline ingestion throughput over a day per EventNamespace. This chart uses *PipelineIngestion > EventReceivedBytes* metric.