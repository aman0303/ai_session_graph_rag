# Controlling access to view Logs

You can control who has access to your logs by creating user roles. By default the administrator user role has access to all logs under all namespaces in your account. You can create additional user roles and give permissions to users at a namespace level. 

The example below shows a new user role being created to grant read permission to users in __MyServiceReaders__ Security Group to logs under the __YourService__ namespace. 

![Grant permission to namespace][PermissionsImage]

> [!NOTE]
> Security Groups that are added to User Roles must be onboarded to dSTS. You can onboard an SG to dSTS through a self-service portal (Go to aka.ms/dscm and choose Release Security Group option). Alternatively, you can use Jarvis UX to simultaneously onboard the SG to dSTS as shown below:
> ![AddSecurityGroup][AddSG]
> 
> ![OnboardSGtodSTS][dSTSOnboarding]

Security Groups are one of the principals that can be granted access through the user role. Other principals that can be added to the user role are users (user aliases without the domain name) and certificates as shown below. 

![SupportedPrincipals][SupportedPrincipals]

Logs support both unmanaged and managed certificates. Certificates can be used to gain cert-based access to your Logs account to automate management operations. For an overview of how to automate management operations through PowerShell [see here][PowerShellManagement]. For information regarding creating the different kinds of certificates [see here][CertificateAccess].

### Having trouble authenticating with a non-Corp account?

If you select a non-Corp account, including AME, GME, or Torus when prompted with a two-factor
authentication popup, you may see an error message like the following:
> User account 'genevauser@ame.gbl' from identity provider '...' does not exist in tenant 'Microsoft' and cannot access the application 'http://GenevaMDM/'(Geneva MDM [wsfed enabled]) in that tenant. The account needs to be added as an external user in the tenant first. Sign out and sign in again with a different Azure Active Directory account.

In this case, please navigate to Jarvis using https://aka.ms/jarvis-dsts. This ensures that Jarvis will authenticate you using DSTS rather than to our AAD app, which currently only permits Redmond identities.

<!-- Image links -->
[PermissionsImage]: ../images/Permissions.png
[AddSG]: ../images/UserRole.png "Add Security Group to User Role"
[dSTSOnboarding]: ../images/dSTSOnboarding.png "Onboard Security Group to dSTS"
[SupportedPrincipals]: ../images/Certificates.png "Supported principals"

<!-- Reference links -->
[PowerShellManagement]: ../powershell.md "Managing Logs account through PowerShell"
[CertificateAccess]: ../../../collect/authentication/overview.md "Certificate authentication in Geneva"
